# @restroom-mw/utils

This package contains useful constants and tools that should be available to other restroom packages.
By now is composed by some constants that are the general configuration of the service.

This constants are loaded with [dotenv](https://github.com/motdotla/dotenv). This means
that if you want to change them you can either do it by defining ENVIRONMENT VARIABLE or
by follow the [Twelve-Factor App](http://12factor.net/config) methodology (to separate
configuration in the environment separate from code) to define them in a `.env` file.

## API

<!-- Generated by documentation.js. Update this documentation by updating the source code. -->

#### Table of Contents

*   [HTTP_PORT](#http_port)
*   [HTTPS_PORT](#https_port)
*   [HOST](#host)
*   [ZENCODE_DIR](#zencode_dir)
*   [CUSTOM\_404\_MESSAGE](#custom\_404\_message)
*   [CHAIN_EXTENSION](#chain_extension)
*   [YML_EXTENSION](#yml_extension)
*   [KEYS_DIR](#keys_dir)
*   [zencodeNamedParamsOf](#zencodenamedparamsof)
    *   [Parameters](#parameters)

### HTTP_PORT

[packages/utils/src/index.ts:16-16](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L16-L16 "Source code on GitHub")

The port on which the restroom middlewares can refer to listen for

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### HTTPS_PORT

[packages/utils/src/index.ts:24-24](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L24-L24 "Source code on GitHub")

The **secure port** on which the restroom middlewares can refer to listen for

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### HOST

[packages/utils/src/index.ts:32-32](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L32-L32 "Source code on GitHub")

The hostname on which the restroom middleware can refer to listen for

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### ZENCODE_DIR

[packages/utils/src/index.ts:39-39](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L39-L39 "Source code on GitHub")

The absolut path of the directory containing the smart contracts

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### CUSTOM\_404\_MESSAGE

[packages/utils/src/index.ts:46-46](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L46-L46 "Source code on GitHub")

Custom error message to show when hit a non existent contract

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### CHAIN_EXTENSION

[packages/utils/src/index.ts:53-53](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L53-L53 "Source code on GitHub")

Chain extension

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### YML_EXTENSION

[packages/utils/src/index.ts:60-60](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L60-L60 "Source code on GitHub")

YML extension

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### KEYS_DIR

[packages/utils/src/index.ts:68-68](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L68-L68 "Source code on GitHub")

To enforce the distinction between data and code, it could be
interesting to save keys in a distinct folder from the zencode

Type: [string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)

### zencodeNamedParamsOf

[packages/utils/src/index.ts:94-103](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/utils/src/index.ts#L94-L103 "Source code on GitHub")

Retrieve the named params content from the input (usually the combination of data and keys).
This is for the sentences that do not directly have a params in them but instead
a reference of the params are in the data and keys object.
It is safe to be used also on sentences with plain params, as it does fallback
to the Zencode.paramsOf function if not found in the input.

Like: `Given I have a sawroom endpoint named 'mySawroomAddressDefinedInsideData'`

#### Parameters

*   `zencode` **Zencode** 
*   `input` **ObjectLiteral** 
