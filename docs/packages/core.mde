# @restroom-mw/core

This package is where the main magic happens.

Listen to endpoints and look for the contracts in the right place.

It manages also the [lifecycle hooks](/architecture?id=lifecycle-hooks) system.

## Usage

Import

```js
const core = require("@restroom-mw/core");
```

and plug

```js
var app = express();
app.use("/api/*", core);
```

## API

<!-- Generated by documentation.js. Update this documentation by updating the source code. -->

#### Table of Contents

*   [addDataToContext](#adddatatocontext)
    *   [Parameters](#parameters)
*   [Restroom](#restroom)
    *   [Parameters](#parameters-1)
    *   [onInit](#oninit)
        *   [Parameters](#parameters-2)
    *   [onBefore](#onbefore)
        *   [Parameters](#parameters-3)
    *   [onSuccess](#onsuccess)
        *   [Parameters](#parameters-4)
    *   [onAfter](#onafter)
        *   [Parameters](#parameters-5)
    *   [onError](#onerror)
        *   [Parameters](#parameters-6)
    *   [onException](#onexception)
        *   [Parameters](#parameters-7)
    *   [onFinish](#onfinish)
        *   [Parameters](#parameters-8)
    *   [safeJSONParse](#safejsonparse)
        *   [Parameters](#parameters-9)
        *   [Examples](#examples)
    *   [combineDataKeys](#combinedatakeys)
        *   [Parameters](#parameters-10)
        *   [Examples](#examples-1)
*   [createGlobalContext](#createglobalcontext)
*   [createDebugEnabledGlobalContext](#createdebugenabledglobalcontext)
*   [validatePathsInYml](#validatepathsinyml)
    *   [Parameters](#parameters-11)
*   [getContractByContractName](#getcontractbycontractname)
    *   [Parameters](#parameters-12)
*   [updateGlobalContext](#updateglobalcontext)
    *   [Parameters](#parameters-13)
*   [getContractFromPath](#getcontractfrompath)
    *   [Parameters](#parameters-14)
*   [updateGlobalContextOutput](#updateglobalcontextoutput)
    *   [Parameters](#parameters-15)
*   [getYml](#getyml)
    *   [Parameters](#parameters-16)
*   [addKeysToContext](#addkeystocontext)
    *   [Parameters](#parameters-17)
*   [validateNoLoopInChain](#validatenoloopinchain)
    *   [Parameters](#parameters-18)
*   [sendError](#senderror)
    *   [Parameters](#parameters-19)
*   [addConfToContext](#addconftocontext)
    *   [Parameters](#parameters-20)
*   [addNextToContext](#addnexttocontext)
    *   [Parameters](#parameters-21)
*   [addZenFileToContext](#addzenfiletocontext)
    *   [Parameters](#parameters-22)
*   [buildEndpointResponse](#buildendpointresponse)
    *   [Parameters](#parameters-23)
*   [executeChain](#executechain)
    *   [Parameters](#parameters-24)
*   [restroomDispatch](#restroomdispatch)
    *   [Parameters](#parameters-25)
*   [evaluateSingleInstance](#evaluatesingleinstance)
    *   [Parameters](#parameters-26)
*   [evaluateMultipleInstances](#evaluatemultipleinstances)
    *   [Parameters](#parameters-27)
*   [evaluateBlockResult](#evaluateblockresult)
    *   [Parameters](#parameters-28)
*   [handleBlockResult](#handleblockresult)
    *   [Parameters](#parameters-29)
*   [callRestroom](#callrestroom)
    *   [Parameters](#parameters-30)

### addDataToContext

[packages/core/src/context.ts:8-14](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L8-L14 "Source code on GitHub")

This function is responsible to add data into single block context

#### Parameters

*   `singleBlockContext` **any** 
*   `data` **any** 
*   `object` **singleBlockContext** context of a single block
*   `object` **data** data for the contract

### Restroom

[packages/core/src/restroom.ts:16-133](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L16-L133 "Source code on GitHub")

#### Parameters

*   `req` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** express req object
*   `res` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** express res object

**Meta**

*   **copyright**: 2020 Dyne.org
*   **author**: Puria Nafisi Azizi \<puria@dyne.org> @pna
*   **license**: AGPL-3.0-only

    Main class that will allow to define promise hooks and
    save \`data\` between different middlewares

#### onInit

[packages/core/src/restroom.ts:35-37](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L35-L37 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onInit lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onBefore

[packages/core/src/restroom.ts:44-46](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L44-L46 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onBefore lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onSuccess

[packages/core/src/restroom.ts:53-55](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L53-L55 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onSuccess lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onAfter

[packages/core/src/restroom.ts:62-64](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L62-L64 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onAfter lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onError

[packages/core/src/restroom.ts:71-73](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L71-L73 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onError lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onException

[packages/core/src/restroom.ts:80-82](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L80-L82 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onException lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### onFinish

[packages/core/src/restroom.ts:89-91](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L89-L91 "Source code on GitHub")

*   **See**: [lifecycle](/architecture?id=lifecycle-hooks)

Saves the promise to be executed at the onFinish lifecycle step

##### Parameters

*   `promise` **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)** 

#### safeJSONParse

[packages/core/src/restroom.ts:105-113](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L105-L113 "Source code on GitHub")

Parse the potential JSON in a safe manner and return it as an object

##### Parameters

*   `o` **DK** 
*   `errorMessage` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)?** 
*   `keys` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 

##### Examples

````javascript
```
const keys = req.body.keys;
const data = await restroom.(keys);
```
````

*   Throws **[Error](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error)** 

Returns **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** 

#### combineDataKeys

[packages/core/src/restroom.ts:128-132](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/restroom.ts#L128-L132 "Source code on GitHub")

*   **See**: [combineDataKeys](/architecture?id=combine-data-keys)

Combine data and keys parsed as safe JSON objects into a single object

##### Parameters

*   `data` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
*   `keys` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** 

##### Examples

````javascript
```
const data = req.body.data;
const keys = req.body.keys;
const dataKeys = await restroom.combineDataKeys(data, keys);
```
````

Returns **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** 

### createGlobalContext

[packages/core/src/context.ts:20-25](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L20-L25 "Source code on GitHub")

This function is responsible to create a global context used for debug purposes

Returns **globalContext** Returns a fresh created global context

### createDebugEnabledGlobalContext

[packages/core/src/context.ts:31-36](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L31-L36 "Source code on GitHub")

This function is responsible to create a global context with debugEnabled mode

Returns **globalContext** Returns a fresh created global context with debugEnabled true

### validatePathsInYml

[packages/core/src/validations.ts:41-59](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/validations.ts#L41-L59 "Source code on GitHub")

Function responsible to check if paths in the yml containing same folder

#### Parameters

*   `ymlContent` **any** 
*   `object` **ymlContent** yml object

### getContractByContractName

[packages/core/src/utils.ts:42-44](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/utils.ts#L42-L44 "Source code on GitHub")

Returns zencode from a contract name

#### Parameters

*   `contractName` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 

Returns **Zencode** 

### updateGlobalContext

[packages/core/src/context.ts:43-49](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L43-L49 "Source code on GitHub")

This function is responsible to update global context used for debug purposes

#### Parameters

*   `singleBlockContext` **any** 
*   `globalContext` **any** 
*   `object` **singleBlockContext** context of a single block
*   `object` **globalContext** previous global context

### getContractFromPath

[packages/core/src/utils.ts:51-53](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/utils.ts#L51-L53 "Source code on GitHub")

Returns zencode from a partial path

#### Parameters

*   `path` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 

Returns **Zencode** 

### updateGlobalContextOutput

[packages/core/src/context.ts:56-59](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L56-L59 "Source code on GitHub")

This function is responsible to update a global context output used for debug purposes

#### Parameters

*   `currentBlock` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 
*   `globalContext` **any** 
*   `output` **any** 
*   `object` **singleBlockContext** context of a single block
*   `object` **globalContext** previous global context

### getYml

[packages/core/src/utils.ts:60-62](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/utils.ts#L60-L62 "Source code on GitHub")

Returns string representing a .yml file

#### Parameters

*   `ymlName` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 

Returns **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 

### addKeysToContext

[packages/core/src/context.ts:66-76](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L66-L76 "Source code on GitHub")

This function is responsible to add keys into single block context from selected .keys file

#### Parameters

*   `singleBlockContext` **any** 
*   `ymlContent` **any** 
*   `object` **singleBlockContext** context of a single block
*   `string` **blockName** block name

### validateNoLoopInChain

[packages/core/src/validations.ts:66-77](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/validations.ts#L66-L77 "Source code on GitHub")

Function responsible to detect if the chain has an infinite loop

#### Parameters

*   `nextStep` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 
*   `ymlContent` **any** 
*   `string` **nextStep** containing next step to follow in the chain
*   `object` **ymlContent** yml object

### sendError

[packages/core/src/index.ts:74-98](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L74-L98 "Source code on GitHub")

Centralized api error handling

#### Parameters

*   `restroomResult` **any** 
*   `string` **subject** subject

### addConfToContext

[packages/core/src/context.ts:83-86](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L83-L86 "Source code on GitHub")

This function is responsible to add keys into single block context from selected .keys file

#### Parameters

*   `singleBlockContext` **any** 
*   `ymlContent` **any** 
*   `object` **singleBlockContext** context of a single block
*   `string` **blockName** block name

### addNextToContext

[packages/core/src/context.ts:93-95](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L93-L95 "Source code on GitHub")

This function is responsible to add next into single block context from yaml flow

#### Parameters

*   `singleBlockContext` **any** 
*   `ymlContent` **any** 
*   `object` **singleBlockContext** context of a single block
*   `object` **ymlContent** yaml content

### addZenFileToContext

[packages/core/src/context.ts:102-104](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/context.ts#L102-L104 "Source code on GitHub")

This function is responsible to add zenFile into single block context from yaml flow

#### Parameters

*   `singleBlockContext` **any** 
*   `ymlContent` **any** 
*   `object` **singleBlockContext** context of a single block
*   `object` **ymlContent** yaml content

### buildEndpointResponse

[packages/core/src/index.ts:105-121](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L105-L121 "Source code on GitHub")

Centralized api response handling

#### Parameters

*   `restroomResult` **RestroomResult** 
*   `res` **[Response](https://developer.mozilla.org/docs/Web/Guide/HTML/HTML5)** 
*   `RestroomResult` **restroomResult** containing restroom result
*   `Response` **res** endpoint response

### executeChain

[packages/core/src/index.ts:140-166](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L140-L166 "Source code on GitHub")

Function responsible to execute the chain

#### Parameters

*   `input` **ChainInput** 
*   `string` **ymlFile** containing restroom result
*   `object` **data** data object coming from endpoint

Returns **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)\<RestroomResult>** 

### restroomDispatch

[packages/core/src/index.ts:174-201](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L174-L201 "Source code on GitHub")

Function responsible to dispatch chain or single contract restroom call

#### Parameters

*   `contractName` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** 
*   `data` **any** 
*   `string` **contractName** name of the contract
*   `any` **data** input data object

Returns **RestroomResult** Returns the restroom result.

### evaluateSingleInstance

[packages/core/src/index.ts:208-236](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L208-L236 "Source code on GitHub")

Function responsible to evaluate a single block instance

#### Parameters

*   `input` **BlockInput** 
*   `BlockInput` **input** input object for the block

Returns **SingleInstanceOutput** Returns the output of this single instance of the block.

### evaluateMultipleInstances

[packages/core/src/index.ts:243-289](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L243-L289 "Source code on GitHub")

Function responsible to evaluate for each of all instances in the block

#### Parameters

*   `input` **BlockInput** 
*   `BlockInput` **input** input object for the block

Returns **BlockOutput** Returns the combined output of all instances of the block.

### evaluateBlockResult

[packages/core/src/index.ts:296-332](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L296-L332 "Source code on GitHub")

Function responsible to evaluate the block result

#### Parameters

*   `input` **BlockInput** 
*   `BlockInput` **input** input object for the block

Returns **BlockOutput** Returns the block result

### handleBlockResult

[packages/core/src/index.ts:339-385](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L339-L385 "Source code on GitHub")

Function responsible to handle the block result

#### Parameters

*   `input` **BlockInput** 
*   `BlockInput` **input** input object for the block

Returns **RestroomResult** Returns the restroom result for this block

### callRestroom

[packages/core/src/index.ts:392-445](https://github.com/albertolerda/restroom-mw/blob/8bcf193be31549f8b5764f826d90bc30406c8b1a/packages/core/src/index.ts#L392-L445 "Source code on GitHub")

Function responsible to call restroom

#### Parameters

*   `input` **RestroomInput** 
*   `RestroomInput` **input** input object for restroom call

Returns **RestroomResult** Returns the restroom result
